$alignment: start end center;
$alignValues: join($alignment, baseline stretch);
$justifyValues: join($alignment, space-between space-around);

.row {
  display: flex;
  flex: 1 1 100%;
  flex-flow: wrap;

  @each $alignValue in $alignValues {
    &.row--align-#{$alignValue} {
      align-items: $alignValue;
    }
  }

  @each $justifyValue in $justifyValues {
    &.row--justify-#{$justifyValue} {
      justify-content: $justifyValue;
    }
  }

  @each $size, $width in $breakpoints {
    // negative margin
    @media all and (min-width: #{$width}) {
      $gutter: map-deep-get($grid-gutters, $size);

      margin-right: calc(#{$gutter} * -1);
      margin-left: calc(#{$gutter} * -1);

      .layout.layout--full & {
        margin-right: calc(#{$gutter} * -1 / 2);
        margin-left: calc(#{$gutter} * -1 / 2);
      }
    }

    @each $alignValue in $alignValues {
      &.row--align-#{$alignValue}-#{$size} {
        align-items: $alignValue;
      }
    }

    @each $justifyValue in $justifyValues {
      &.row--justify-#{$justifyValue}-#{$size} {
        justify-content: $justifyValue;
      }
    }
  }

  // no gutter class
  @include touch {
    //&.row--no-gutter-touch {
    //  padding-right: 0;
    //  padding-left: 0;
    //
    //  @each $size, $width in $breakpoints {
    //    @media all and (min-width: #{$width}) {
    //      $gutter: map-deep-get($grid-gutters, $size);
    //
    //      margin-right: calc(#{$gutter} / 2 * -1);
    //      margin-left: calc(#{$gutter} / 2 * -1);
    //    }
    //  }
    //}
  }

  @include desktop {
    //&.row--no-gutter-desktop {
    //  padding-right: 0;
    //  padding-left: 0;
    //
    //  @each $size, $width in $breakpoints {
    //    @media all and (min-width: #{$width}) {
    //      $gutter: map-deep-get($grid-gutters, $size);
    //
    //      margin-right: calc(#{$gutter} / 2 * -1);
    //      margin-left: calc(#{$gutter} / 2 * -1);
    //    }
    //  }
    //}
  }
}
